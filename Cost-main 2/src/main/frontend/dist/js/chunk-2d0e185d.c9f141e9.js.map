{"version":3,"sources":["webpack:///./src/views/pages/order/socketProgramming.vue","webpack:///src/views/pages/order/socketProgramming.vue","webpack:///./src/views/pages/order/socketProgramming.vue?9e82","webpack:///./src/views/pages/order/socketProgramming.vue?71b8"],"names":["render","_vm","this","_c","_self","staticClass","attrs","_m","_l","received_messages","item","key","_v","_s","staticRenderFns","name","data","allNotifications","methods","send","console","log","send_message","stompClient","connected","msg","JSON","stringify","connect","_this","socket","SockJS","Stomp","over","frame","subscribe","tick","push","parse","body","error","created","mounted","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,QAAQ,CAACE,YAAY,sBAAsBC,MAAM,CAAC,GAAK,iBAAiB,CAACL,EAAIM,GAAG,GAAGJ,EAAG,QAAQF,EAAIO,GAAIP,EAAIQ,mBAAmB,SAASC,GAAM,OAAOP,EAAG,KAAK,CAACQ,IAAID,GAAM,CAACP,EAAG,KAAK,CAACF,EAAIW,GAAGX,EAAIY,GAAGH,WAAa,YAEzVI,EAAkB,CAAC,WAAY,IAAIb,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACF,EAAIW,GAAG,gD,0CCuB7F,GACfG,KAAA,gBACAC,KAAA,WACA,OACAP,kBAAA,GACAQ,iBAAA,KAGAC,QAAA,CACAC,KAAA,WAEA,GADAC,QAAAC,IAAA,qBAAAC,cACA,KAAAC,aAAA,KAAAA,YAAAC,UAAA,CACA,IAAAC,EAAA,CAAAV,KAAA,QACA,KAAAQ,YAAAJ,KAAA,aAAAO,KAAAC,UAAAF,GAAA,MAGAG,QAAA,eAAAC,EAAA,KACA,KAAAC,OAAA,IAAAC,IAAA,4CACA,KAAAR,YAAAS,IAAAC,KAAA,KAAAH,QACA,KAAAP,YAAAK,QACA,IACA,SAAAM,GACAL,EAAAL,WAAA,EACAK,EAAAV,OACAC,QAAAC,IAAAa,GACAL,EAAAN,YAAAY,UAAA,6BAAAC,GACAP,EAAApB,kBAAA4B,KAAAX,KAAAY,MAAAF,EAAAG,OACAV,EAAAZ,iBAAAY,EAAApB,kBAAA,SAGA,SAAA+B,GACApB,QAAAC,IAAAmB,GACAX,EAAAL,WAAA,OAMAiB,QAAA,WACA,KAAAb,WAEAc,QAAA,cClEwX,I,YCOpXC,EAAY,eACd,EACA3C,EACAc,GACA,EACA,KACA,WACA,MAIa,aAAA6B,E","file":"js/chunk-2d0e185d.c9f141e9.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('table',{staticClass:\"table table-striped\",attrs:{\"id\":\"conversation\"}},[_vm._m(0),_c('tbody',_vm._l((_vm.received_messages),function(item){return _c('tr',{key:item},[_c('td',[_vm._v(_vm._s(item))])])}),0)])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('thead',[_c('tr',[_c('th',[_vm._v(\"Testing Socket Programming..........\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n    <div>        \n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <table id=\"conversation\" class=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th>Testing Socket Programming..........</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"item in received_messages\" :key=\"item\">\n                                <td>{{ item }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"webstomp-client\";\n\nexport default {\n  name: \"websocketdemo\",\n  data() {\n    return {\n      received_messages: [],\n      allNotifications: [],\n    };\n  },\n  methods: {\n      send() {\n            console.log(\"Send message:\" + this.send_message);\n            if (this.stompClient && this.stompClient.connected) {\n              const msg = { name: \"Ashu\" };\n              this.stompClient.send(\"/app/hello\", JSON.stringify(msg), {});\n            }\n          },\n          connect() {\n            this.socket = new SockJS(\"http://localhost:8081/gs-guide-websocket\");\n            this.stompClient = Stomp.over(this.socket);\n            this.stompClient.connect(\n              {},\n              frame => {\n                this.connected = true;\n                this.send();\n                console.log(frame);\n                this.stompClient.subscribe(\"/topic/greetings\", tick => {\n                this.received_messages.push(JSON.parse(tick.body));  \n                this.allNotifications = this.received_messages[0]\n                });\n              },\n              error => {\n                console.log(error);\n                this.connected = false;\n              }\n            );\n          },\n  },\n\n  created(){\n    this.connect()\n  },\n  mounted() {\n  }\n};\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./socketProgramming.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./socketProgramming.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./socketProgramming.vue?vue&type=template&id=4554d51e&scoped=true\"\nimport script from \"./socketProgramming.vue?vue&type=script&lang=js\"\nexport * from \"./socketProgramming.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4554d51e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}